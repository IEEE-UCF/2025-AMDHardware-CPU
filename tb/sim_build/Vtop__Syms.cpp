// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Symbol table implementation internals

#include "Vtop__pch.h"
#include "Vtop.h"
#include "Vtop___024root.h"

// FUNCTIONS
Vtop__Syms::~Vtop__Syms()
{

    // Tear down scope hierarchy
    __Vhier.remove(0, &__Vscope_cpu_top);
    __Vhier.remove(&__Vscope_cpu_top, &__Vscope_cpu_top__ex_stage);
    __Vhier.remove(&__Vscope_cpu_top, &__Vscope_cpu_top__exmm_reg);
    __Vhier.remove(&__Vscope_cpu_top, &__Vscope_cpu_top__id_stage);
    __Vhier.remove(&__Vscope_cpu_top, &__Vscope_cpu_top__idex_reg);
    __Vhier.remove(&__Vscope_cpu_top, &__Vscope_cpu_top__if_stage);
    __Vhier.remove(&__Vscope_cpu_top, &__Vscope_cpu_top__mm_stage_inst);
    __Vhier.remove(&__Vscope_cpu_top, &__Vscope_cpu_top__wb_stage);
    __Vhier.remove(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__a_bypass);
    __Vhier.remove(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__b_bypass);
    __Vhier.remove(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__b_mux);
    __Vhier.remove(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__branch_addrs);
    __Vhier.remove(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__gen_imme);
    __Vhier.remove(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__load_stall_check);
    __Vhier.remove(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__register_file);
    __Vhier.remove(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__rs_equality);
    __Vhier.remove(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__stage2);
    __Vhier.remove(&__Vscope_cpu_top__id_stage__a_bypass, &__Vscope_cpu_top__id_stage__a_bypass__bypass_selection);
    __Vhier.remove(&__Vscope_cpu_top__id_stage__b_bypass, &__Vscope_cpu_top__id_stage__b_bypass__bypass_selection);
    __Vhier.remove(&__Vscope_cpu_top__id_stage__register_file, &__Vscope_cpu_top__id_stage__register_file__a_out);
    __Vhier.remove(&__Vscope_cpu_top__id_stage__register_file, &__Vscope_cpu_top__id_stage__register_file__b_out);
    __Vhier.remove(&__Vscope_cpu_top__id_stage__register_file, &__Vscope_cpu_top__id_stage__register_file__gpu);
    __Vhier.remove(&__Vscope_cpu_top__id_stage__register_file, &__Vscope_cpu_top__id_stage__register_file__main);
    __Vhier.remove(&__Vscope_cpu_top__id_stage__register_file, &__Vscope_cpu_top__id_stage__register_file__shadow);
    __Vhier.remove(&__Vscope_cpu_top__id_stage__register_file__gpu, &__Vscope_cpu_top__id_stage__register_file__gpu__unnamedblk1);
    __Vhier.remove(&__Vscope_cpu_top__id_stage__register_file__main, &__Vscope_cpu_top__id_stage__register_file__main__unnamedblk1);
    __Vhier.remove(&__Vscope_cpu_top__id_stage__register_file__shadow, &__Vscope_cpu_top__id_stage__register_file__shadow__unnamedblk1);
    __Vhier.remove(&__Vscope_cpu_top__id_stage__stage2, &__Vscope_cpu_top__id_stage__stage2__insts);
    __Vhier.remove(&__Vscope_cpu_top__if_stage, &__Vscope_cpu_top__if_stage__M1);
    __Vhier.remove(&__Vscope_cpu_top__if_stage, &__Vscope_cpu_top__if_stage__M2);
    __Vhier.remove(&__Vscope_cpu_top__if_stage, &__Vscope_cpu_top__if_stage__M3);

}

Vtop__Syms::Vtop__Syms(VerilatedContext* contextp, const char* namep, Vtop* modelp)
    : VerilatedSyms{contextp}
    // Setup internal state of the Syms class
    , __Vm_modelp{modelp}
    // Setup module instances
    , TOP{this, namep}
{
        // Check resources
        Verilated::stackCheck(107);
    // Configure time unit / time precision
    _vm_contextp__->timeunit(-9);
    _vm_contextp__->timeprecision(-12);
    // Setup each module's pointers to their submodules
    // Setup each module's pointer back to symbol table (for public functions)
    TOP.__Vconfigure(true);
    // Setup scopes
    __Vscope_TOP.configure(this, name(), "TOP", "TOP", "<null>", 0, VerilatedScope::SCOPE_OTHER);
    __Vscope_cpu_top.configure(this, name(), "cpu_top", "cpu_top", "cpu_top", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__ex_stage.configure(this, name(), "cpu_top.ex_stage", "ex_stage", "pl_stage_exe", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__exmm_reg.configure(this, name(), "cpu_top.exmm_reg", "exmm_reg", "reg_ex_to_mm", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage.configure(this, name(), "cpu_top.id_stage", "id_stage", "stage_id", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__a_bypass.configure(this, name(), "cpu_top.id_stage.a_bypass", "a_bypass", "bypass_mux", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__a_bypass__bypass_selection.configure(this, name(), "cpu_top.id_stage.a_bypass.bypass_selection", "bypass_selection", "mux_n", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__b_bypass.configure(this, name(), "cpu_top.id_stage.b_bypass", "b_bypass", "bypass_mux", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__b_bypass__bypass_selection.configure(this, name(), "cpu_top.id_stage.b_bypass.bypass_selection", "bypass_selection", "mux_n", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__b_mux.configure(this, name(), "cpu_top.id_stage.b_mux", "b_mux", "mux_n", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__branch_addrs.configure(this, name(), "cpu_top.id_stage.branch_addrs", "branch_addrs", "branch_calc", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__gen_imme.configure(this, name(), "cpu_top.id_stage.gen_imme", "gen_imme", "imme", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__load_stall_check.configure(this, name(), "cpu_top.id_stage.load_stall_check", "load_stall_check", "stage_id_stall", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__register_file.configure(this, name(), "cpu_top.id_stage.register_file", "register_file", "register_bank_list", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__register_file__a_out.configure(this, name(), "cpu_top.id_stage.register_file.a_out", "a_out", "mux_n", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__register_file__b_out.configure(this, name(), "cpu_top.id_stage.register_file.b_out", "b_out", "mux_n", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__register_file__gpu.configure(this, name(), "cpu_top.id_stage.register_file.gpu", "gpu", "register_bank_gpu", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__register_file__gpu__unnamedblk1.configure(this, name(), "cpu_top.id_stage.register_file.gpu.unnamedblk1", "unnamedblk1", "<null>", -9, VerilatedScope::SCOPE_OTHER);
    __Vscope_cpu_top__id_stage__register_file__main.configure(this, name(), "cpu_top.id_stage.register_file.main", "main", "register_bank_cpu", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__register_file__main__unnamedblk1.configure(this, name(), "cpu_top.id_stage.register_file.main.unnamedblk1", "unnamedblk1", "<null>", -9, VerilatedScope::SCOPE_OTHER);
    __Vscope_cpu_top__id_stage__register_file__shadow.configure(this, name(), "cpu_top.id_stage.register_file.shadow", "shadow", "register_bank_cpu", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__register_file__shadow__unnamedblk1.configure(this, name(), "cpu_top.id_stage.register_file.shadow.unnamedblk1", "unnamedblk1", "<null>", -9, VerilatedScope::SCOPE_OTHER);
    __Vscope_cpu_top__id_stage__rs_equality.configure(this, name(), "cpu_top.id_stage.rs_equality", "rs_equality", "equ", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__stage2.configure(this, name(), "cpu_top.id_stage.stage2", "stage2", "reg_if_to_id", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__id_stage__stage2__insts.configure(this, name(), "cpu_top.id_stage.stage2.insts", "insts", "instruction_buffer", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__idex_reg.configure(this, name(), "cpu_top.idex_reg", "idex_reg", "reg_id_to_ex", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__if_stage.configure(this, name(), "cpu_top.if_stage", "if_stage", "stage_if", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__if_stage__M1.configure(this, name(), "cpu_top.if_stage.M1", "M1", "mux_n", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__if_stage__M2.configure(this, name(), "cpu_top.if_stage.M2", "M2", "reg_if", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__if_stage__M3.configure(this, name(), "cpu_top.if_stage.M3", "M3", "memory_instruction", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__mm_stage_inst.configure(this, name(), "cpu_top.mm_stage_inst", "mm_stage_inst", "mm_stage", -9, VerilatedScope::SCOPE_MODULE);
    __Vscope_cpu_top__wb_stage.configure(this, name(), "cpu_top.wb_stage", "wb_stage", "pl_stage_wb", -9, VerilatedScope::SCOPE_MODULE);

    // Set up scope hierarchy
    __Vhier.add(0, &__Vscope_cpu_top);
    __Vhier.add(&__Vscope_cpu_top, &__Vscope_cpu_top__ex_stage);
    __Vhier.add(&__Vscope_cpu_top, &__Vscope_cpu_top__exmm_reg);
    __Vhier.add(&__Vscope_cpu_top, &__Vscope_cpu_top__id_stage);
    __Vhier.add(&__Vscope_cpu_top, &__Vscope_cpu_top__idex_reg);
    __Vhier.add(&__Vscope_cpu_top, &__Vscope_cpu_top__if_stage);
    __Vhier.add(&__Vscope_cpu_top, &__Vscope_cpu_top__mm_stage_inst);
    __Vhier.add(&__Vscope_cpu_top, &__Vscope_cpu_top__wb_stage);
    __Vhier.add(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__a_bypass);
    __Vhier.add(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__b_bypass);
    __Vhier.add(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__b_mux);
    __Vhier.add(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__branch_addrs);
    __Vhier.add(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__gen_imme);
    __Vhier.add(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__load_stall_check);
    __Vhier.add(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__register_file);
    __Vhier.add(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__rs_equality);
    __Vhier.add(&__Vscope_cpu_top__id_stage, &__Vscope_cpu_top__id_stage__stage2);
    __Vhier.add(&__Vscope_cpu_top__id_stage__a_bypass, &__Vscope_cpu_top__id_stage__a_bypass__bypass_selection);
    __Vhier.add(&__Vscope_cpu_top__id_stage__b_bypass, &__Vscope_cpu_top__id_stage__b_bypass__bypass_selection);
    __Vhier.add(&__Vscope_cpu_top__id_stage__register_file, &__Vscope_cpu_top__id_stage__register_file__a_out);
    __Vhier.add(&__Vscope_cpu_top__id_stage__register_file, &__Vscope_cpu_top__id_stage__register_file__b_out);
    __Vhier.add(&__Vscope_cpu_top__id_stage__register_file, &__Vscope_cpu_top__id_stage__register_file__gpu);
    __Vhier.add(&__Vscope_cpu_top__id_stage__register_file, &__Vscope_cpu_top__id_stage__register_file__main);
    __Vhier.add(&__Vscope_cpu_top__id_stage__register_file, &__Vscope_cpu_top__id_stage__register_file__shadow);
    __Vhier.add(&__Vscope_cpu_top__id_stage__register_file__gpu, &__Vscope_cpu_top__id_stage__register_file__gpu__unnamedblk1);
    __Vhier.add(&__Vscope_cpu_top__id_stage__register_file__main, &__Vscope_cpu_top__id_stage__register_file__main__unnamedblk1);
    __Vhier.add(&__Vscope_cpu_top__id_stage__register_file__shadow, &__Vscope_cpu_top__id_stage__register_file__shadow__unnamedblk1);
    __Vhier.add(&__Vscope_cpu_top__id_stage__stage2, &__Vscope_cpu_top__id_stage__stage2__insts);
    __Vhier.add(&__Vscope_cpu_top__if_stage, &__Vscope_cpu_top__if_stage__M1);
    __Vhier.add(&__Vscope_cpu_top__if_stage, &__Vscope_cpu_top__if_stage__M2);
    __Vhier.add(&__Vscope_cpu_top__if_stage, &__Vscope_cpu_top__if_stage__M3);

    // Setup export functions
    for (int __Vfinal = 0; __Vfinal < 2; ++__Vfinal) {
        __Vscope_TOP.varInsert(__Vfinal,"interrupt", &(TOP.__SYM__interrupt), false, VLVT_UINT8,VLVD_IN|VLVF_PUB_RW,0,0);
        __Vscope_TOP.varInsert(__Vfinal,"clk", &(TOP.clk), false, VLVT_UINT8,VLVD_IN|VLVF_PUB_RW,0,0);
        __Vscope_TOP.varInsert(__Vfinal,"debug_inst", &(TOP.debug_inst), false, VLVT_UINT32,VLVD_OUT|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_TOP.varInsert(__Vfinal,"debug_pc", &(TOP.debug_pc), false, VLVT_UINT64,VLVD_OUT|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_TOP.varInsert(__Vfinal,"dmem_addr", &(TOP.dmem_addr), false, VLVT_UINT64,VLVD_OUT|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_TOP.varInsert(__Vfinal,"dmem_read", &(TOP.dmem_read), false, VLVT_UINT8,VLVD_OUT|VLVF_PUB_RW,0,0);
        __Vscope_TOP.varInsert(__Vfinal,"dmem_read_data", &(TOP.dmem_read_data), false, VLVT_UINT64,VLVD_IN|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_TOP.varInsert(__Vfinal,"dmem_ready", &(TOP.dmem_ready), false, VLVT_UINT8,VLVD_IN|VLVF_PUB_RW,0,0);
        __Vscope_TOP.varInsert(__Vfinal,"dmem_write", &(TOP.dmem_write), false, VLVT_UINT8,VLVD_OUT|VLVF_PUB_RW,0,0);
        __Vscope_TOP.varInsert(__Vfinal,"dmem_write_data", &(TOP.dmem_write_data), false, VLVT_UINT64,VLVD_OUT|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_TOP.varInsert(__Vfinal,"imem_addr", &(TOP.imem_addr), false, VLVT_UINT64,VLVD_OUT|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_TOP.varInsert(__Vfinal,"imem_data", &(TOP.imem_data), false, VLVT_UINT32,VLVD_IN|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_TOP.varInsert(__Vfinal,"imem_ready", &(TOP.imem_ready), false, VLVT_UINT8,VLVD_IN|VLVF_PUB_RW,0,0);
        __Vscope_TOP.varInsert(__Vfinal,"pipeline_stall", &(TOP.pipeline_stall), false, VLVT_UINT8,VLVD_OUT|VLVF_PUB_RW,0,0);
        __Vscope_TOP.varInsert(__Vfinal,"reset", &(TOP.reset), false, VLVT_UINT8,VLVD_IN|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"ADDR_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__ADDR_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"DATA_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__DATA_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"IMM_TYPE_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__IMM_TYPE_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"INST_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__INST_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"PC_TYPE_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__PC_TYPE_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"REG_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__REG_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"branch_taken", &(TOP.cpu_top__DOT__branch_taken), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"debug_inst", &(TOP.cpu_top__DOT__debug_inst), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"debug_pc", &(TOP.cpu_top__DOT__debug_pc), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"dmem_addr", &(TOP.cpu_top__DOT__dmem_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"dmem_read", &(TOP.cpu_top__DOT__dmem_read), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"dmem_read_data", &(TOP.cpu_top__DOT__dmem_read_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"dmem_ready", &(TOP.cpu_top__DOT__dmem_ready), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"dmem_write", &(TOP.cpu_top__DOT__dmem_write), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"dmem_write_data", &(TOP.cpu_top__DOT__dmem_write_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"ex_alu_result", &(TOP.cpu_top__DOT__ex_alu_result), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"ex_forward_data", &(TOP.cpu_top__DOT__ex_forward_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"ex_forward_rd", &(TOP.cpu_top__DOT__ex_forward_rd), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"exmm_alu_result", &(TOP.cpu_top__DOT__exmm_alu_result), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"exmm_mem_read", &(TOP.cpu_top__DOT__exmm_mem_read), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"exmm_mem_write", &(TOP.cpu_top__DOT__exmm_mem_write), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"exmm_rd", &(TOP.cpu_top__DOT__exmm_rd), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"exmm_reg_write", &(TOP.cpu_top__DOT__exmm_reg_write), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"exmm_write_data", &(TOP.cpu_top__DOT__exmm_write_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"global_stall", &(TOP.cpu_top__DOT__global_stall), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"gpu_read_addr", &(TOP.cpu_top__DOT__gpu_read_addr), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"gpu_write_addr", &(TOP.cpu_top__DOT__gpu_write_addr), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"gpu_write_data", &(TOP.cpu_top__DOT__gpu_write_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"gpu_write_en", &(TOP.cpu_top__DOT__gpu_write_en), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_alu_op", &(TOP.cpu_top__DOT__id_alu_op), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_bra_addr", &(TOP.cpu_top__DOT__id_bra_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_has_imm", &(TOP.cpu_top__DOT__id_has_imm), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_imm_type", &(TOP.cpu_top__DOT__id_imm_type), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,1,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_is_equal", &(TOP.cpu_top__DOT__id_is_equal), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_is_load", &(TOP.cpu_top__DOT__id_is_load), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_jal_addr", &(TOP.cpu_top__DOT__id_jal_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_jar_addr", &(TOP.cpu_top__DOT__id_jar_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_mem_read", &(TOP.cpu_top__DOT__id_mem_read), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_mem_write", &(TOP.cpu_top__DOT__id_mem_write), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_pc_sel", &(TOP.cpu_top__DOT__id_pc_sel), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,1,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_rd", &(TOP.cpu_top__DOT__id_rd), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_read_out_a", &(TOP.cpu_top__DOT__id_read_out_a), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_read_out_b", &(TOP.cpu_top__DOT__id_read_out_b), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_read_out_gpu", &(TOP.cpu_top__DOT__id_read_out_gpu), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_reg_write", &(TOP.cpu_top__DOT__id_reg_write), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_rs1", &(TOP.cpu_top__DOT__id_rs1), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"id_rs2", &(TOP.cpu_top__DOT__id_rs2), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"idex_alu_op", &(TOP.cpu_top__DOT__idex_alu_op), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,3,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"idex_imm", &(TOP.cpu_top__DOT__idex_imm), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"idex_mem_read", &(TOP.cpu_top__DOT__idex_mem_read), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"idex_mem_write", &(TOP.cpu_top__DOT__idex_mem_write), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"idex_rd", &(TOP.cpu_top__DOT__idex_rd), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"idex_reg_write", &(TOP.cpu_top__DOT__idex_reg_write), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"idex_rs1", &(TOP.cpu_top__DOT__idex_rs1), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"idex_rs1_data", &(TOP.cpu_top__DOT__idex_rs1_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"idex_rs2", &(TOP.cpu_top__DOT__idex_rs2), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"idex_rs2_data", &(TOP.cpu_top__DOT__idex_rs2_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"if_inst", &(TOP.cpu_top__DOT__if_inst), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"if_inst_buffer_empty", &(TOP.cpu_top__DOT__if_inst_buffer_empty), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"if_inst_buffer_full", &(TOP.cpu_top__DOT__if_inst_buffer_full), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"if_inst_valid", &(TOP.cpu_top__DOT__if_inst_valid), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"if_pc", &(TOP.cpu_top__DOT__if_pc), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"if_pc4", &(TOP.cpu_top__DOT__if_pc4), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"imem_addr", &(TOP.cpu_top__DOT__imem_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"imem_data", &(TOP.cpu_top__DOT__imem_data), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"imem_ready", &(TOP.cpu_top__DOT__imem_ready), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"interrupt", &(TOP.cpu_top__DOT__interrupt), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"load_stall", &(TOP.cpu_top__DOT__load_stall), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"mm_alu_result", &(TOP.cpu_top__DOT__mm_alu_result), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"mm_forward_data", &(TOP.cpu_top__DOT__mm_forward_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"mm_forward_rd", &(TOP.cpu_top__DOT__mm_forward_rd), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"mm_mem_data", &(TOP.cpu_top__DOT__mm_mem_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"mm_mem_forward_data", &(TOP.cpu_top__DOT__mm_mem_forward_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"mm_mem_forward_rd", &(TOP.cpu_top__DOT__mm_mem_forward_rd), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"mm_rd", &(TOP.cpu_top__DOT__mm_rd), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"mm_reg_write", &(TOP.cpu_top__DOT__mm_reg_write), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"pipeline_stall", &(TOP.cpu_top__DOT__pipeline_stall), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"reset", &(TOP.cpu_top__DOT__reset), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top.varInsert(__Vfinal,"wb_data", &(TOP.cpu_top__DOT__wb_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__ex_stage.varInsert(__Vfinal,"DATA_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__ex_stage__DOT__DATA_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__ex_stage.varInsert(__Vfinal,"ea", &(TOP.cpu_top__DOT__ex_stage__DOT__ea), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__ex_stage.varInsert(__Vfinal,"eal", &(TOP.cpu_top__DOT__ex_stage__DOT__eal), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__ex_stage.varInsert(__Vfinal,"ealu", &(TOP.cpu_top__DOT__ex_stage__DOT__ealu), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__ex_stage.varInsert(__Vfinal,"ealuc", &(TOP.cpu_top__DOT__ex_stage__DOT__ealuc), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__ex_stage.varInsert(__Vfinal,"eb", &(TOP.cpu_top__DOT__ex_stage__DOT__eb), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__ex_stage.varInsert(__Vfinal,"ecall", &(TOP.cpu_top__DOT__ex_stage__DOT__ecall), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__ex_stage.varInsert(__Vfinal,"epc4", &(TOP.cpu_top__DOT__ex_stage__DOT__epc4), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"DATA_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__exmm_reg__DOT__DATA_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"alu_result_in", &(TOP.cpu_top__DOT__exmm_reg__DOT__alu_result_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"alu_result_out", &(TOP.cpu_top__DOT__exmm_reg__DOT__alu_result_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__exmm_reg__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"mem_read_in", &(TOP.cpu_top__DOT__exmm_reg__DOT__mem_read_in), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"mem_read_out", &(TOP.cpu_top__DOT__exmm_reg__DOT__mem_read_out), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"mem_write_in", &(TOP.cpu_top__DOT__exmm_reg__DOT__mem_write_in), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"mem_write_out", &(TOP.cpu_top__DOT__exmm_reg__DOT__mem_write_out), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"rd_in", &(TOP.cpu_top__DOT__exmm_reg__DOT__rd_in), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"rd_out", &(TOP.cpu_top__DOT__exmm_reg__DOT__rd_out), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"reg_write_in", &(TOP.cpu_top__DOT__exmm_reg__DOT__reg_write_in), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"reg_write_out", &(TOP.cpu_top__DOT__exmm_reg__DOT__reg_write_out), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"rst", &(TOP.cpu_top__DOT__exmm_reg__DOT__rst), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"write_data_in", &(TOP.cpu_top__DOT__exmm_reg__DOT__write_data_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__exmm_reg.varInsert(__Vfinal,"write_data_out", &(TOP.cpu_top__DOT__exmm_reg__DOT__write_data_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"ADDR_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__ADDR_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"INST_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__INST_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"REG_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__REG_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"a_file_out", &(TOP.cpu_top__DOT__id_stage__DOT__a_file_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"a_out", &(TOP.cpu_top__DOT__id_stage__DOT__a_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"b_file_out", &(TOP.cpu_top__DOT__id_stage__DOT__b_file_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"b_out_options", &(TOP.cpu_top__DOT__id_stage__DOT__b_out_options), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"bra_addr", &(TOP.cpu_top__DOT__id_stage__DOT__bra_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__id_stage__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"d_inst", &(TOP.cpu_top__DOT__id_stage__DOT__d_inst), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"d_inst_next", &(TOP.cpu_top__DOT__id_stage__DOT__d_inst_next), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"d_pc", &(TOP.cpu_top__DOT__id_stage__DOT__d_pc), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"d_pc4", &(TOP.cpu_top__DOT__id_stage__DOT__d_pc4), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"ex_pro", &(TOP.cpu_top__DOT__id_stage__DOT__ex_pro), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"ex_pro_rs", &(TOP.cpu_top__DOT__id_stage__DOT__ex_pro_rs), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"has_imm", &(TOP.cpu_top__DOT__id_stage__DOT__has_imm), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"imm_type", &(TOP.cpu_top__DOT__id_stage__DOT__imm_type), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,1,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"inst_buffer_empty", &(TOP.cpu_top__DOT__id_stage__DOT__inst_buffer_empty), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"inst_buffer_full", &(TOP.cpu_top__DOT__id_stage__DOT__inst_buffer_full), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"inst_word", &(TOP.cpu_top__DOT__id_stage__DOT__inst_word), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"interrupt", &(TOP.cpu_top__DOT__id_stage__DOT__interrupt), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"is_equal", &(TOP.cpu_top__DOT__id_stage__DOT__is_equal), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"is_load", &(TOP.cpu_top__DOT__id_stage__DOT__is_load), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"jal_addr", &(TOP.cpu_top__DOT__id_stage__DOT__jal_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"jar_addr", &(TOP.cpu_top__DOT__id_stage__DOT__jar_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"load_rd", &(TOP.cpu_top__DOT__id_stage__DOT__load_rd), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"load_stall", &(TOP.cpu_top__DOT__id_stage__DOT__load_stall), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"mm_mem", &(TOP.cpu_top__DOT__id_stage__DOT__mm_mem), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"mm_mem_rs", &(TOP.cpu_top__DOT__id_stage__DOT__mm_mem_rs), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"mm_pro", &(TOP.cpu_top__DOT__id_stage__DOT__mm_pro), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"mm_pro_rs", &(TOP.cpu_top__DOT__id_stage__DOT__mm_pro_rs), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"pc", &(TOP.cpu_top__DOT__id_stage__DOT__pc), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"pc4", &(TOP.cpu_top__DOT__id_stage__DOT__pc4), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"read_out_a", &(TOP.cpu_top__DOT__id_stage__DOT__read_out_a), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"read_out_b", &(TOP.cpu_top__DOT__id_stage__DOT__read_out_b), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"read_out_gpu", &(TOP.cpu_top__DOT__id_stage__DOT__read_out_gpu), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"reg_stall", &(TOP.cpu_top__DOT__id_stage__DOT__reg_stall), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"reset", &(TOP.cpu_top__DOT__id_stage__DOT__reset), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"rs_gpu", &(TOP.cpu_top__DOT__id_stage__DOT__rs_gpu), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"stall", &(TOP.cpu_top__DOT__id_stage__DOT__stall), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"w_en", &(TOP.cpu_top__DOT__id_stage__DOT__w_en), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"w_en_gpu", &(TOP.cpu_top__DOT__id_stage__DOT__w_en_gpu), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"w_rd", &(TOP.cpu_top__DOT__id_stage__DOT__w_rd), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"w_rd_gpu", &(TOP.cpu_top__DOT__id_stage__DOT__w_rd_gpu), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"w_result", &(TOP.cpu_top__DOT__id_stage__DOT__w_result), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage.varInsert(__Vfinal,"w_result_gpu", &(TOP.cpu_top__DOT__id_stage__DOT__w_result_gpu), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"ADDR_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__ADDR_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"REG_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__REG_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"bypass_options", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__bypass_options), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,3 ,63,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"bypass_out", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__bypass_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"bypass_sel", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__bypass_sel), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,1,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"ex_pro", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__ex_pro), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"ex_pro_rs", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__ex_pro_rs), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"file_out", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__file_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"file_out_rs", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__file_out_rs), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"mm_mem", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__mm_mem), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"mm_mem_rs", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__mm_mem_rs), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"mm_pro", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__mm_pro), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__a_bypass.varInsert(__Vfinal,"mm_pro_rs", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__mm_pro_rs), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__a_bypass__bypass_selection.varInsert(__Vfinal,"INPUT_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__bypass_selection__DOT__INPUT_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__a_bypass__bypass_selection.varInsert(__Vfinal,"INPUT_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__bypass_selection__DOT__INPUT_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__a_bypass__bypass_selection.varInsert(__Vfinal,"data_in", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__bypass_selection__DOT__data_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,3 ,63,0);
        __Vscope_cpu_top__id_stage__a_bypass__bypass_selection.varInsert(__Vfinal,"data_out", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__bypass_selection__DOT__data_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__a_bypass__bypass_selection.varInsert(__Vfinal,"sel", &(TOP.cpu_top__DOT__id_stage__DOT__a_bypass__DOT__bypass_selection__DOT__sel), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,1,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"ADDR_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__ADDR_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"REG_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__REG_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"bypass_options", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__bypass_options), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,3 ,63,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"bypass_out", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__bypass_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"bypass_sel", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__bypass_sel), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,1,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"ex_pro", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__ex_pro), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"ex_pro_rs", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__ex_pro_rs), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"file_out", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__file_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"file_out_rs", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__file_out_rs), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"mm_mem", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__mm_mem), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"mm_mem_rs", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__mm_mem_rs), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"mm_pro", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__mm_pro), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__b_bypass.varInsert(__Vfinal,"mm_pro_rs", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__mm_pro_rs), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__b_bypass__bypass_selection.varInsert(__Vfinal,"INPUT_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__bypass_selection__DOT__INPUT_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__b_bypass__bypass_selection.varInsert(__Vfinal,"INPUT_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__bypass_selection__DOT__INPUT_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__b_bypass__bypass_selection.varInsert(__Vfinal,"data_in", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__bypass_selection__DOT__data_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,3 ,63,0);
        __Vscope_cpu_top__id_stage__b_bypass__bypass_selection.varInsert(__Vfinal,"data_out", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__bypass_selection__DOT__data_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__b_bypass__bypass_selection.varInsert(__Vfinal,"sel", &(TOP.cpu_top__DOT__id_stage__DOT__b_bypass__DOT__bypass_selection__DOT__sel), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,1,0);
        __Vscope_cpu_top__id_stage__b_mux.varInsert(__Vfinal,"INPUT_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__b_mux__DOT__INPUT_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__b_mux.varInsert(__Vfinal,"INPUT_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__b_mux__DOT__INPUT_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__b_mux.varInsert(__Vfinal,"data_in", &(TOP.cpu_top__DOT__id_stage__DOT__b_mux__DOT__data_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__b_mux.varInsert(__Vfinal,"data_out", &(TOP.cpu_top__DOT__id_stage__DOT__b_mux__DOT__data_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__b_mux.varInsert(__Vfinal,"sel", &(TOP.cpu_top__DOT__id_stage__DOT__b_mux__DOT__sel), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,0,0);
        __Vscope_cpu_top__id_stage__branch_addrs.varInsert(__Vfinal,"ADDR_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__branch_addrs__DOT__ADDR_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__branch_addrs.varInsert(__Vfinal,"INST_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__branch_addrs__DOT__INST_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__branch_addrs.varInsert(__Vfinal,"bra_addr", &(TOP.cpu_top__DOT__id_stage__DOT__branch_addrs__DOT__bra_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__branch_addrs.varInsert(__Vfinal,"bra_offset", &(TOP.cpu_top__DOT__id_stage__DOT__branch_addrs__DOT__bra_offset), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__branch_addrs.varInsert(__Vfinal,"data_a", &(TOP.cpu_top__DOT__id_stage__DOT__branch_addrs__DOT__data_a), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__branch_addrs.varInsert(__Vfinal,"dest", &(TOP.cpu_top__DOT__id_stage__DOT__branch_addrs__DOT__dest), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__branch_addrs.varInsert(__Vfinal,"inst", &(TOP.cpu_top__DOT__id_stage__DOT__branch_addrs__DOT__inst), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__branch_addrs.varInsert(__Vfinal,"jal_addr", &(TOP.cpu_top__DOT__id_stage__DOT__branch_addrs__DOT__jal_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__branch_addrs.varInsert(__Vfinal,"jal_offset", &(TOP.cpu_top__DOT__id_stage__DOT__branch_addrs__DOT__jal_offset), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__branch_addrs.varInsert(__Vfinal,"jalr_addr", &(TOP.cpu_top__DOT__id_stage__DOT__branch_addrs__DOT__jalr_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__branch_addrs.varInsert(__Vfinal,"jalr_offset", &(TOP.cpu_top__DOT__id_stage__DOT__branch_addrs__DOT__jalr_offset), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__branch_addrs.varInsert(__Vfinal,"pc", &(TOP.cpu_top__DOT__id_stage__DOT__branch_addrs__DOT__pc), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__gen_imme.varInsert(__Vfinal,"DATA_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__gen_imme__DOT__DATA_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__gen_imme.varInsert(__Vfinal,"IMM_TYPE_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__gen_imme__DOT__IMM_TYPE_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__gen_imme.varInsert(__Vfinal,"INST_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__gen_imme__DOT__INST_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__gen_imme.varInsert(__Vfinal,"imm", &(TOP.cpu_top__DOT__id_stage__DOT__gen_imme__DOT__imm), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__gen_imme.varInsert(__Vfinal,"imm_type", &(TOP.cpu_top__DOT__id_stage__DOT__gen_imme__DOT__imm_type), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,1,0);
        __Vscope_cpu_top__id_stage__gen_imme.varInsert(__Vfinal,"inst", &(TOP.cpu_top__DOT__id_stage__DOT__gen_imme__DOT__inst), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__load_stall_check.varInsert(__Vfinal,"ADDR_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__load_stall_check__DOT__ADDR_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__load_stall_check.varInsert(__Vfinal,"REG_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__load_stall_check__DOT__REG_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__load_stall_check.varInsert(__Vfinal,"is_load", &(TOP.cpu_top__DOT__id_stage__DOT__load_stall_check__DOT__is_load), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__load_stall_check.varInsert(__Vfinal,"load_rd", &(TOP.cpu_top__DOT__id_stage__DOT__load_stall_check__DOT__load_rd), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__load_stall_check.varInsert(__Vfinal,"rs1_addr", &(TOP.cpu_top__DOT__id_stage__DOT__load_stall_check__DOT__rs1_addr), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__load_stall_check.varInsert(__Vfinal,"rs2_addr", &(TOP.cpu_top__DOT__id_stage__DOT__load_stall_check__DOT__rs2_addr), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__load_stall_check.varInsert(__Vfinal,"stall", &(TOP.cpu_top__DOT__id_stage__DOT__load_stall_check__DOT__stall), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"DATA_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__DATA_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"REG_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__REG_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"data_in_cpu", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__data_in_cpu), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"data_in_gpu", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__data_in_gpu), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"data_out_a", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__data_out_a), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"data_out_a_options", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__data_out_a_options), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"data_out_b", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__data_out_b), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"data_out_b_options", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__data_out_b_options), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"data_out_gpu", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__data_out_gpu), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"interrupt", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__interrupt), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"read_addr_a", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__read_addr_a), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"read_addr_b", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__read_addr_b), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"read_addr_gpu", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__read_addr_gpu), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"reset", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__reset), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"write_addr_cpu", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__write_addr_cpu), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"write_addr_gpu", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__write_addr_gpu), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"write_en_cpu", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__write_en_cpu), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"write_en_gpu", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__write_en_gpu), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file.varInsert(__Vfinal,"write_en_main", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__write_en_main), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file__a_out.varInsert(__Vfinal,"INPUT_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__a_out__DOT__INPUT_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file__a_out.varInsert(__Vfinal,"INPUT_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__a_out__DOT__INPUT_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file__a_out.varInsert(__Vfinal,"data_in", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__a_out__DOT__data_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__a_out.varInsert(__Vfinal,"data_out", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__a_out__DOT__data_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__a_out.varInsert(__Vfinal,"sel", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__a_out__DOT__sel), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,0,0);
        __Vscope_cpu_top__id_stage__register_file__b_out.varInsert(__Vfinal,"INPUT_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__b_out__DOT__INPUT_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file__b_out.varInsert(__Vfinal,"INPUT_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__b_out__DOT__INPUT_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file__b_out.varInsert(__Vfinal,"data_in", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__b_out__DOT__data_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__b_out.varInsert(__Vfinal,"data_out", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__b_out__DOT__data_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__b_out.varInsert(__Vfinal,"sel", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__b_out__DOT__sel), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,0,0);
        __Vscope_cpu_top__id_stage__register_file__gpu.varInsert(__Vfinal,"DATA_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__gpu__DOT__DATA_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file__gpu.varInsert(__Vfinal,"REG_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__gpu__DOT__REG_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file__gpu.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__gpu__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file__gpu.varInsert(__Vfinal,"data_in", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__gpu__DOT__data_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__gpu.varInsert(__Vfinal,"data_out", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__gpu__DOT__data_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__gpu.varInsert(__Vfinal,"read_addr", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__gpu__DOT__read_addr), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file__gpu.varInsert(__Vfinal,"registers", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__gpu__DOT__registers), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,31 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__gpu.varInsert(__Vfinal,"reset", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__gpu__DOT__reset), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file__gpu.varInsert(__Vfinal,"write_addr", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__gpu__DOT__write_addr), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file__gpu.varInsert(__Vfinal,"write_en", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__gpu__DOT__write_en), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file__gpu__unnamedblk1.varInsert(__Vfinal,"i", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__gpu__DOT__unnamedblk1__DOT__i), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW|VLVF_DPI_CLAY,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file__main.varInsert(__Vfinal,"DATA_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__DATA_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file__main.varInsert(__Vfinal,"REG_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__REG_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file__main.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file__main.varInsert(__Vfinal,"data_in", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__data_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__main.varInsert(__Vfinal,"data_out_a", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__data_out_a), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__main.varInsert(__Vfinal,"data_out_b", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__data_out_b), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__main.varInsert(__Vfinal,"read_addr_a", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__read_addr_a), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file__main.varInsert(__Vfinal,"read_addr_b", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__read_addr_b), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file__main.varInsert(__Vfinal,"registers", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__registers), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,31 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__main.varInsert(__Vfinal,"reset", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__reset), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file__main.varInsert(__Vfinal,"write_addr", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__write_addr), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file__main.varInsert(__Vfinal,"write_en", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__write_en), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file__main__unnamedblk1.varInsert(__Vfinal,"i", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__main__DOT__unnamedblk1__DOT__i), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW|VLVF_DPI_CLAY,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file__shadow.varInsert(__Vfinal,"DATA_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__DATA_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file__shadow.varInsert(__Vfinal,"REG_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__REG_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__register_file__shadow.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file__shadow.varInsert(__Vfinal,"data_in", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__data_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__shadow.varInsert(__Vfinal,"data_out_a", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__data_out_a), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__shadow.varInsert(__Vfinal,"data_out_b", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__data_out_b), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__shadow.varInsert(__Vfinal,"read_addr_a", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__read_addr_a), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file__shadow.varInsert(__Vfinal,"read_addr_b", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__read_addr_b), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file__shadow.varInsert(__Vfinal,"registers", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__registers), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,31 ,63,0);
        __Vscope_cpu_top__id_stage__register_file__shadow.varInsert(__Vfinal,"reset", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__reset), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file__shadow.varInsert(__Vfinal,"write_addr", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__write_addr), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__id_stage__register_file__shadow.varInsert(__Vfinal,"write_en", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__write_en), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__register_file__shadow__unnamedblk1.varInsert(__Vfinal,"i", &(TOP.cpu_top__DOT__id_stage__DOT__register_file__DOT__shadow__DOT__unnamedblk1__DOT__i), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW|VLVF_DPI_CLAY,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__rs_equality.varInsert(__Vfinal,"DATA_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__rs_equality__DOT__DATA_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__rs_equality.varInsert(__Vfinal,"data_a", &(TOP.cpu_top__DOT__id_stage__DOT__rs_equality__DOT__data_a), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__rs_equality.varInsert(__Vfinal,"data_b", &(TOP.cpu_top__DOT__id_stage__DOT__rs_equality__DOT__data_b), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__rs_equality.varInsert(__Vfinal,"is_equal", &(TOP.cpu_top__DOT__id_stage__DOT__rs_equality__DOT__is_equal), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"ADDR_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__ADDR_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"INST_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__INST_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"d_inst", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__d_inst), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"d_inst_next", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__d_inst_next), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"d_pc", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__d_pc), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"d_pc4", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__d_pc4), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"inst", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__inst), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"inst_buffer_empty", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__inst_buffer_empty), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"inst_buffer_full", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__inst_buffer_full), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"pc", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__pc), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"pc4", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__pc4), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"pc4_reg", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__pc4_reg), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"pc_reg", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__pc_reg), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"reset", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__reset), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2.varInsert(__Vfinal,"stall", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__stall), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"BUFFER_DEPTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__BUFFER_DEPTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"INST_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__INST_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"data_in", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__data_in), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"data_out", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__data_out), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"inst_buffer", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__inst_buffer), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,7 ,31,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"inst_curr", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__inst_curr), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"inst_next", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__inst_next), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"is_empty", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__is_empty), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"is_empty_flag", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__is_empty_flag), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"is_full", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__is_full), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"is_full_flag", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__is_full_flag), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"lower_bits_equal", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__lower_bits_equal), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"read_ptr", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__read_ptr), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,3,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"reset", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__reset), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"upper_bit_equal", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__upper_bit_equal), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"write_en", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__write_en), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__id_stage__stage2__insts.varInsert(__Vfinal,"write_ptr", &(TOP.cpu_top__DOT__id_stage__DOT__stage2__DOT__insts__DOT__write_ptr), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,3,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"DATA_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__idex_reg__DOT__DATA_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"alu_op_in", &(TOP.cpu_top__DOT__idex_reg__DOT__alu_op_in), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,3,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"alu_op_out", &(TOP.cpu_top__DOT__idex_reg__DOT__alu_op_out), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,3,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__idex_reg__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"imm_in", &(TOP.cpu_top__DOT__idex_reg__DOT__imm_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"imm_out", &(TOP.cpu_top__DOT__idex_reg__DOT__imm_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"mem_read_in", &(TOP.cpu_top__DOT__idex_reg__DOT__mem_read_in), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"mem_read_out", &(TOP.cpu_top__DOT__idex_reg__DOT__mem_read_out), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"mem_write_in", &(TOP.cpu_top__DOT__idex_reg__DOT__mem_write_in), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"mem_write_out", &(TOP.cpu_top__DOT__idex_reg__DOT__mem_write_out), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"rd_in", &(TOP.cpu_top__DOT__idex_reg__DOT__rd_in), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"rd_out", &(TOP.cpu_top__DOT__idex_reg__DOT__rd_out), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"reg_write_in", &(TOP.cpu_top__DOT__idex_reg__DOT__reg_write_in), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"reg_write_out", &(TOP.cpu_top__DOT__idex_reg__DOT__reg_write_out), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"rs1_data_in", &(TOP.cpu_top__DOT__idex_reg__DOT__rs1_data_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"rs1_data_out", &(TOP.cpu_top__DOT__idex_reg__DOT__rs1_data_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"rs1_in", &(TOP.cpu_top__DOT__idex_reg__DOT__rs1_in), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"rs1_out", &(TOP.cpu_top__DOT__idex_reg__DOT__rs1_out), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"rs2_data_in", &(TOP.cpu_top__DOT__idex_reg__DOT__rs2_data_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"rs2_data_out", &(TOP.cpu_top__DOT__idex_reg__DOT__rs2_data_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"rs2_in", &(TOP.cpu_top__DOT__idex_reg__DOT__rs2_in), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"rs2_out", &(TOP.cpu_top__DOT__idex_reg__DOT__rs2_out), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__idex_reg.varInsert(__Vfinal,"rst", &(TOP.cpu_top__DOT__idex_reg__DOT__rst), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"ADDR_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__if_stage__DOT__ADDR_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"INST_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__if_stage__DOT__INST_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"PC_TYPE_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__if_stage__DOT__PC_TYPE_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"bra_addr", &(TOP.cpu_top__DOT__if_stage__DOT__bra_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__if_stage__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"d_inst_word", &(TOP.cpu_top__DOT__if_stage__DOT__d_inst_word), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"d_pc", &(TOP.cpu_top__DOT__if_stage__DOT__d_pc), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"d_pc4", &(TOP.cpu_top__DOT__if_stage__DOT__d_pc4), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"inst_buffer_empty", &(TOP.cpu_top__DOT__if_stage__DOT__inst_buffer_empty), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"inst_buffer_full", &(TOP.cpu_top__DOT__if_stage__DOT__inst_buffer_full), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"inst_valid", &(TOP.cpu_top__DOT__if_stage__DOT__inst_valid), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"inst_word", &(TOP.cpu_top__DOT__if_stage__DOT__inst_word), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"jal_addr", &(TOP.cpu_top__DOT__if_stage__DOT__jal_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"jar_addr", &(TOP.cpu_top__DOT__if_stage__DOT__jar_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"pc_curr", &(TOP.cpu_top__DOT__if_stage__DOT__pc_curr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"pc_next", &(TOP.cpu_top__DOT__if_stage__DOT__pc_next), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"pc_next_options", &(TOP.cpu_top__DOT__if_stage__DOT__pc_next_options), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,3 ,63,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"pc_sel", &(TOP.cpu_top__DOT__if_stage__DOT__pc_sel), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,1,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"reset", &(TOP.cpu_top__DOT__if_stage__DOT__reset), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__if_stage.varInsert(__Vfinal,"stall", &(TOP.cpu_top__DOT__if_stage__DOT__stall), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__if_stage__M1.varInsert(__Vfinal,"INPUT_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__if_stage__DOT__M1__DOT__INPUT_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__if_stage__M1.varInsert(__Vfinal,"INPUT_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__if_stage__DOT__M1__DOT__INPUT_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__if_stage__M1.varInsert(__Vfinal,"data_in", &(TOP.cpu_top__DOT__if_stage__DOT__M1__DOT__data_in), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,1,1 ,0,3 ,63,0);
        __Vscope_cpu_top__if_stage__M1.varInsert(__Vfinal,"data_out", &(TOP.cpu_top__DOT__if_stage__DOT__M1__DOT__data_out), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__if_stage__M1.varInsert(__Vfinal,"sel", &(TOP.cpu_top__DOT__if_stage__DOT__M1__DOT__sel), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,1,0);
        __Vscope_cpu_top__if_stage__M2.varInsert(__Vfinal,"ADDR_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__if_stage__DOT__M2__DOT__ADDR_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__if_stage__M2.varInsert(__Vfinal,"RESET_ADDR", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__if_stage__DOT__M2__DOT__RESET_ADDR))), true, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__if_stage__M2.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__if_stage__DOT__M2__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__if_stage__M2.varInsert(__Vfinal,"pc_next", &(TOP.cpu_top__DOT__if_stage__DOT__M2__DOT__pc_next), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__if_stage__M2.varInsert(__Vfinal,"pc_reg", &(TOP.cpu_top__DOT__if_stage__DOT__M2__DOT__pc_reg), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__if_stage__M2.varInsert(__Vfinal,"reset", &(TOP.cpu_top__DOT__if_stage__DOT__M2__DOT__reset), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__if_stage__M2.varInsert(__Vfinal,"stall", &(TOP.cpu_top__DOT__if_stage__DOT__M2__DOT__stall), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__if_stage__M3.varInsert(__Vfinal,"ADDR_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__if_stage__DOT__M3__DOT__ADDR_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__if_stage__M3.varInsert(__Vfinal,"INST_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__if_stage__DOT__M3__DOT__INST_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__if_stage__M3.varInsert(__Vfinal,"PC_TYPE_NUM", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__if_stage__DOT__M3__DOT__PC_TYPE_NUM))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__if_stage__M3.varInsert(__Vfinal,"inst_valid", &(TOP.cpu_top__DOT__if_stage__DOT__M3__DOT__inst_valid), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__if_stage__M3.varInsert(__Vfinal,"inst_word", &(TOP.cpu_top__DOT__if_stage__DOT__M3__DOT__inst_word), false, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__if_stage__M3.varInsert(__Vfinal,"pc", &(TOP.cpu_top__DOT__if_stage__DOT__M3__DOT__pc), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__if_stage__M3.varInsert(__Vfinal,"pc_sel", &(TOP.cpu_top__DOT__if_stage__DOT__M3__DOT__pc_sel), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,1,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"ADDR_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__mm_stage_inst__DOT__ADDR_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"DATA_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__mm_stage_inst__DOT__DATA_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"clk", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__clk), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"ex_mem_alu_result", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__ex_mem_alu_result), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"ex_mem_mem_read", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__ex_mem_mem_read), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"ex_mem_mem_write", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__ex_mem_mem_write), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"ex_mem_rd", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__ex_mem_rd), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"ex_mem_reg_write", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__ex_mem_reg_write), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"ex_mem_write_data", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__ex_mem_write_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"mem_addr", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__mem_addr), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"mem_read", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__mem_read), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"mem_read_data", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__mem_read_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"mem_wb_alu_result", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__mem_wb_alu_result), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"mem_wb_mem_data", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__mem_wb_mem_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"mem_wb_rd", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__mem_wb_rd), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,1 ,4,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"mem_wb_reg_write", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__mem_wb_reg_write), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"mem_write", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__mem_write), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"mem_write_data", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__mem_write_data), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__mm_stage_inst.varInsert(__Vfinal,"rst", &(TOP.cpu_top__DOT__mm_stage_inst__DOT__rst), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
        __Vscope_cpu_top__wb_stage.varInsert(__Vfinal,"DATA_WIDTH", const_cast<void*>(static_cast<const void*>(&(TOP.cpu_top__DOT__wb_stage__DOT__DATA_WIDTH))), true, VLVT_UINT32,VLVD_NODIR|VLVF_PUB_RW,0,1 ,31,0);
        __Vscope_cpu_top__wb_stage.varInsert(__Vfinal,"walu", &(TOP.cpu_top__DOT__wb_stage__DOT__walu), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__wb_stage.varInsert(__Vfinal,"wdata", &(TOP.cpu_top__DOT__wb_stage__DOT__wdata), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__wb_stage.varInsert(__Vfinal,"wmem", &(TOP.cpu_top__DOT__wb_stage__DOT__wmem), false, VLVT_UINT64,VLVD_NODIR|VLVF_PUB_RW,0,1 ,63,0);
        __Vscope_cpu_top__wb_stage.varInsert(__Vfinal,"wmem2reg", &(TOP.cpu_top__DOT__wb_stage__DOT__wmem2reg), false, VLVT_UINT8,VLVD_NODIR|VLVF_PUB_RW,0,0);
    }
}
